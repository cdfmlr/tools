#!/usr/bin/env python

"""
This script is used to check whether the CF tunnel is alive.

Usage: cloudflareTunnelHealth <tunnel name or id>

STDOUT:
    - "OK: ..."   if tunnel is all right
    - "ERROR ..." if tunnel dead or program error
RETURN: 
    - 0: (200) OK: tunnel alive
    - 1: (400) argv error
    - 2: (417) ERROR: tunnel dead
    - 3: (500) unexpected error
"""

import json
import sys
import subprocess


def get_tunnel_info(id_or_name):
    cmd = subprocess.run(
            f'cloudflared tunnel info --output json {id_or_name}',
            capture_output=True, shell=True, check=True)
    return json.loads(cmd.stdout)


def is_disconnected(tunnel_info):
    good_connections = 0
    for conn1 in tunnel_info['conns']:
        for conn2 in conn1['conns']:
            if not conn2['is_pending_reconnect']:
                good_connections += 1
    return good_connections <= 0


if __name__ == '__main__':
    if len(sys.argv) != 2:
        print('Usage: cloudflareTunnelHealth <tunnel name or id>')
        sys.exit(-1)
    target = sys.argv[1]

    try:
        tunnel = get_tunnel_info(target)
    
        if is_disconnected(tunnel):
            print(f'ERROR: tunnel {target} is disconnected.')
            sys.exit(2)
    except Exception as e:
        print(f'ERROR: {e}')
        sys.exit(3)

    print(f'OK: tunnel {target} is connected.')
    sys.exit(0)

